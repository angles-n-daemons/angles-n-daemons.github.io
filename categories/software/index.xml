<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>software on Home</title><link>https://abudlightlime.com/categories/software/</link><description>Recent content in software on Home</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sat, 05 Aug 2023 10:26:00 -0400</lastBuildDate><atom:link href="https://abudlightlime.com/categories/software/index.xml" rel="self" type="application/rss+xml"/><item><title>popSQL part 1: reading the sqlite database file</title><link>https://abudlightlime.com/posts/20230805-popsql-1-reading-db-pages/</link><pubDate>Sat, 05 Aug 2023 10:26:00 -0400</pubDate><guid>https://abudlightlime.com/posts/20230805-popsql-1-reading-db-pages/</guid><description>Reading the database files My approach this time will be to start from the absolute bottom of the system, the file format. I chose this as a starting place because it&amp;rsquo;s easy to test in addition to being well documented. From there I&amp;rsquo;ll design a close-enough-to the source set of abstractions which are unit tested fairly comprehsively.
Before we write any code, let&amp;rsquo;s look at the directory for the code this section.</description></item><item><title>popSQL part 0: a DB education through reverse-engineering</title><link>https://abudlightlime.com/posts/20230803-popsql-0-recreating-sqlite/</link><pubDate>Thu, 03 Aug 2023 11:41:42 -0400</pubDate><guid>https://abudlightlime.com/posts/20230803-popsql-0-recreating-sqlite/</guid><description>A liking for database systems Databases have long been a special interest of mine. Since taking CS 445 Information Systems at UMass, I&amp;rsquo;ve held a unique curiosity for how databases were used and how they worked under the hood. I found topics like relational algebra fascinating, and I always enjoyed how clean SQL felt. I distinctly remember how enjoyable it was leafing through Michael Stonebraker&amp;rsquo;s Red Book and over time I developed a decent understanding about how to design, interact with and debug production databases.</description></item><item><title>RBAC x ReBAC, a hybrid authorization model for big technology companies</title><link>https://abudlightlime.com/posts/20230217-rbac-and-rebac/</link><pubDate>Tue, 16 May 2023 15:12:30 -0400</pubDate><guid>https://abudlightlime.com/posts/20230217-rbac-and-rebac/</guid><description>Note: This article is an abandoned draft. I still feel some of the ideas and concepts are helpful, so I&amp;rsquo;ve left it here in case the thought experiment benefits anyone.
When one access-control model isn&amp;rsquo;t enough An application&amp;rsquo;s access-control scheme is an important part of ensuring safety within your business. Most companies I&amp;rsquo;ve worked with have employed an RBAC model to secure their internal applications, which has provides a good-enough set of restrictions and controls for employees.</description></item><item><title>If not careful, A/B testing will kill innovation</title><link>https://abudlightlime.com/posts/20220716-abtesting-and-innovation/</link><pubDate>Sat, 16 Jul 2022 15:34:22 -0400</pubDate><guid>https://abudlightlime.com/posts/20220716-abtesting-and-innovation/</guid><description>Note: I substitued the phrase A/B Testing for experimentation in this document
I recently read an article on hacker news highlighting some of the anti-patterns of experimentation and it got me thinking about an idea that I’ve had bouncing around in my head for some time. The article begins to unwind some of the common risks with experimentation, which generally include ignoring the long term effects of experiments and only measuring part of what matters.</description></item><item><title>Wanna get better? Spend less time rubbernecking.</title><link>https://abudlightlime.com/posts/20220703-rubberneck-debugging/</link><pubDate>Sun, 03 Jul 2022 16:26:50 -0400</pubDate><guid>https://abudlightlime.com/posts/20220703-rubberneck-debugging/</guid><description>What is rubberneck debugging? Rubberneck debugging is something I see a lot of high achieving engineers fall trap to. Put simply, it’s the eagerness one might feel to respond to urgent inquiries in a forum like slack. I find that it tends to stifle the engineers growth, as well as diminishes the opportunities that newer and more junior engineers have to engage in public discussion.
What does it look like? I think we&amp;rsquo;ve all been in this situation before.</description></item><item><title>Your first rotation oncall as a Software Engineer</title><link>https://abudlightlime.com/posts/20211224-your-first-oncall-rotation/</link><pubDate>Fri, 24 Dec 2021 21:37:13 -0400</pubDate><guid>https://abudlightlime.com/posts/20211224-your-first-oncall-rotation/</guid><description>I think most engineers remember this first time oncall. If you&amp;rsquo;re writing software at any larger organization, oncall is a way for the company to delegate critical issues and shield teams from unexpected interruptions. I found this helpful guide](https://brianjenney.medium.com/how-to-survive-your-first-on-call-rotation-as-a-software-engineer-5bc0d334566e) detailing a lot of the ideas I share, and hope that this document can serve as an affirmation and compliment to that one.
What to do I want to highlight the most important idea about oncall that I feel not everyone knows.</description></item><item><title>Diagnosing MySQL deadlocks</title><link>https://abudlightlime.com/posts/20211126-diagnosing-mysql-deadlocks/</link><pubDate>Fri, 26 Nov 2021 19:02:13 -0400</pubDate><guid>https://abudlightlime.com/posts/20211126-diagnosing-mysql-deadlocks/</guid><description>An unpleasant exception Deadlock found when trying to get lock; try restarting transaction If you&amp;rsquo;re reading this document, you&amp;rsquo;re either here out of curiosity or necessity. I&amp;rsquo;ll be brief for those in the latter camp. When you encounter the above error in production, you only need the stack trace to figure out which query got blocked. What I have found is difficult to ascertain is which query is doing the actual blocking.</description></item><item><title>Kubernetes Web Deployments, a love story</title><link>https://abudlightlime.com/posts/20211028-k8s-web-deployments/</link><pubDate>Thu, 28 Oct 2021 21:37:13 -0400</pubDate><guid>https://abudlightlime.com/posts/20211028-k8s-web-deployments/</guid><description>The wrong tool for the job? Kubernetes is quickly becoming the default mechanism for engineers to manage remote deployments. Its feature-richness and ease of use make it an attractive solution for pushing work into the cloud. However, there still exist some quirks of its usage that any web developer should know before using it. This story tells of one of them.
What happens on Deployment For anyone who knows kubernetes, you&amp;rsquo;ll know that service deployments are rolled out in sets of pods.</description></item></channel></rss>