<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Authorization on Home</title><link>https://abudlightlime.com/tags/authorization/</link><description>Recent content in Authorization on Home</description><generator>Hugo</generator><language>en</language><lastBuildDate>Tue, 16 May 2023 15:12:30 -0400</lastBuildDate><atom:link href="https://abudlightlime.com/tags/authorization/index.xml" rel="self" type="application/rss+xml"/><item><title>RBAC x ReBAC, a hybrid authorization model for big technology companies</title><link>https://abudlightlime.com/posts/20230217-rbac-and-rebac/</link><pubDate>Tue, 16 May 2023 15:12:30 -0400</pubDate><guid>https://abudlightlime.com/posts/20230217-rbac-and-rebac/</guid><description>&lt;p>&lt;em>Note:&lt;/em> This article is an abandoned draft. I still feel some of the ideas and concepts are helpful, so I&amp;rsquo;ve left it here in case the thought experiment benefits anyone.&lt;/p>
&lt;h2 id="when-one-access-control-model-isnt-enough">When one access-control model isn&amp;rsquo;t enough&lt;/h2>
&lt;p>An application&amp;rsquo;s access-control scheme is an important part of ensuring safety within your business. Most companies I&amp;rsquo;ve worked with have employed an RBAC model to secure their internal applications, which has provides a good-enough set of restrictions and controls for employees. This model breaks down as the business gets more complex, as does ReBAC - a popular alternative to RBAC. The wikipedia page for ReBAC describes how it can be layered in conjunction with RBAC [citation needed], but the literature online is sparse on exactly how to go about doing so. In this article, I aim to describe an implementation for doing so using a concrete business use case.&lt;/p></description></item></channel></rss>