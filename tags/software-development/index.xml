<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>software development on Home</title><link>https://abudlightlime.com/tags/software-development/</link><description>Recent content in software development on Home</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Fri, 03 Jun 2022 16:26:50 -0400</lastBuildDate><atom:link href="https://abudlightlime.com/tags/software-development/index.xml" rel="self" type="application/rss+xml"/><item><title>Wanna get better? Spend less time rubbernecking.</title><link>https://abudlightlime.com/post/20220603-rubberneck-debugging/</link><pubDate>Fri, 03 Jun 2022 16:26:50 -0400</pubDate><guid>https://abudlightlime.com/post/20220603-rubberneck-debugging/</guid><description>What is rubberneck debugging? Rubberneck debugging is something I see a lot of high achieving engineers fall trap to. Put simply, itâ€™s the eagerness one might feel to respond to urgent inquiries in a forum like slack. I find that it tends to stifle the engineers growth, as well as diminishes the opportunities that newer and more junior engineers have to engage in product discussion.
What does it look like? I think we&amp;rsquo;ve all been in this situation before.</description></item></channel></rss>